# Fill in your name, student ID, and email address in this file.
# If you are working in a team, fill out the information for both team 
# members.

# SUBMIT THE LAB ONLY ONCE (from only one partner). This file will be
# automatically parsed in order to give both team members credit for the
# lab.

# You need to fill in the EXERCISE sections describing your solutions
# for Tasks 1, 2, and 3, as well as write the corresponding code.
# If you did one or more extra credit problems, indicate which one in the
# appropriate section below (remove the # sign first). If you have any other
# information you'd like us to know, please add it at the end of the file.

# Partner 1
Name: Chunchun Ye
Student ID: 304-502-384
Email: yechunchun@ucla.edu

# Partner 2 (if you're working in a team)
Name: Kexin Yu
Student ID: 804-316-935
Email: kexinyu@ucla.edu

# EXERCISE 1: What method you used to make your peer download and upload
#    files in parallel?  (~1-3 sentences)
We implemented the concurrency by forking processes. We make all the files
to be downloaded first, and then start uploading all the files. 

# EXERCISE 2A: What conditions did you find and fix that would have
#    triggered a buffer overrun bug?  (~1-3 sentences each)
strcpy() is a function that can cause buffer overflow because it may copy
the file whose size may be larger than TASKBUFSIZ.
We replaced strcpy() with strncpy() in start_download() and task_download()
to enforce that the copied file size does not exceed TASKBUFSIZ.


# EXERCISE 2B: What other robustness problems did you fix?  (~1-3 sentences
#    each)
- Pre-allocated enough space for filename and disk_filename:
    We replaced strcpy() with memset() in task_new() to allocate a fixed size 
    array for filename and disk_filename to avoid future buffer overflow.
	

- Check each peer should only serve in its current directory
	Compare the current working directory path with file path. If they 
	are different, means the file is not within the peer's current 
	directory.

- Limite the maximun file size
	We don't want to download a really big file, so we set a maximun file 
	size.
	
- Communications with tracker proceed normally even when many peers logged in at once:
	Initially, TASKBUFSIZ is not large enough to allow many peers to be logged in 
	at once. We increased the value of TASKBUFSIZ in macro to fix the problem. 



# Add any other information you'd like us to know below this line.
